{"ast":null,"code":"import _objectSpread from \"/Users/mahlonkirwa/Desktop/Project /aands/jipe-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mahlonkirwa/Desktop/Project /aands/jipe-app/src/App.js\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport NavBar from \"./components/navbar\";\nimport AddUser from \"./components/adduser\";\nimport Dispatch from \"./components/drivers\";\nimport Drivers from \"./components/drivers\";\nimport Loads from \"./components/loads\";\nimport Users from \"./components/users\";\nimport Admin from \"./components/admin\";\nimport Allcomponents from \"./components/allcomponents\";\nimport FormSearch from \"./components/formsearch\";\nimport \"./App.css\";\nimport Accountant from \"./components/accountant\";\n\nclass App extends Allcomponents {\n  //1st lifecycle hooks\n  constructor(props) {\n    super(props);\n    this.state = {\n      //instead of hard coding all the counters in the render method\n      //div section,\n      //just use an array instead and render them using the map method\n      //array will have counter objects\n      //add a new property allcomponents\n      // Use this to uniquely identify each\n      //counter\n      allcomponents: [//counter objects\n      //we use id to uniquely identify each counter\n      //value property sets the intial value for each counter\n      {\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }],\n      isOpen: false\n    };\n\n    this.handleIncrement = counter => {\n      //creating a new counters array and giving it\n      //to the set state method and have react update\n      //the state\n      //... this is the spread operator clones\n      //this.state.allcomponents\n      //with these, you will get a new array of counters\n      //the object in the new array(counters) are the same\n      //objects we have in allcomponents\n      const counters = [...this.state.allcomponents];\n      const index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n      this.setState({\n        allcomponents: counters\n      });\n    };\n\n    this.handleReset = () => {\n      //this.state.allcomponents - this refers to the existing\n      //counters\n      //we use the map method to get each counter and reset\n      //its value to zero and then return it\n      //this give you a new array of counters\n      //You store them in counters.\n      //\n      const counters = this.state.allcomponents.map(c => {\n        c.value = 0;\n        return c;\n      }); //here you call this.setState with this new array\n\n      this.setState({\n        allcomponents: counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.allcomponents.filter(c => c.id !== counterId);\n      this.setState({\n        allcomponents: counters\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const data = this.state;\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.resetTheme = evt => {\n      evt.preventDefault();\n      this.setState({\n        theme: null\n      });\n    };\n\n    this.chooseTheme = (theme, evt) => {\n      evt.preventDefault();\n      this.setState({\n        theme\n      });\n    };\n\n    console.log(\"App-Constructor\", this.props);\n  } //2nd lifecycle hooks\n  //called after the component is rendered into the DOM\n  //this is the perfect place to make Ajax calls to get data from the server\n\n\n  componentDidMount() {\n    //ajax call\n    console.log(\"App-Constructor\", this.props);\n  }\n\n  render() {\n    //render method\n    console.log(\"App-rendered\"); //const { search } = this.state;\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      totalCounters: this.state.allcomponents.filter(c => c.value > 0).length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Allcomponents, {\n      counters: this.state.allcomponents,\n      onReset: this.handleReset,\n      onIncrement: this.handleIncrement,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/accountant\",\n      component: Accountant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/adduser\",\n      component: AddUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/dispatch\",\n      component: Dispatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/drivers\",\n      component: Drivers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/formsearch\",\n      component: FormSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/loads\",\n      component: Loads,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/navbar\",\n      component: NavBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      component: Users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mahlonkirwa/Desktop/Project /aands/jipe-app/src/App.js"],"names":["React","Route","NavBar","AddUser","Dispatch","Drivers","Loads","Users","Admin","Allcomponents","FormSearch","Accountant","App","constructor","props","state","allcomponents","id","value","isOpen","handleIncrement","counter","counters","index","indexOf","setState","handleReset","map","c","handleDelete","counterId","filter","handleSubmit","event","preventDefault","data","handleInputChange","target","name","resetTheme","evt","theme","chooseTheme","console","log","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport NavBar from \"./components/navbar\";\nimport AddUser from \"./components/adduser\";\nimport Dispatch from \"./components/drivers\";\nimport Drivers from \"./components/drivers\";\nimport Loads from \"./components/loads\";\nimport Users from \"./components/users\";\nimport Admin from \"./components/admin\";\nimport Allcomponents from \"./components/allcomponents\";\nimport FormSearch from \"./components/formsearch\";\nimport \"./App.css\";\nimport Accountant from \"./components/accountant\";\n\nclass App extends Allcomponents {\n  state = {\n    //instead of hard coding all the counters in the render method\n    //div section,\n    //just use an array instead and render them using the map method\n    //array will have counter objects\n    //add a new property allcomponents\n    // Use this to uniquely identify each\n    //counter\n    allcomponents: [\n      //counter objects\n      //we use id to uniquely identify each counter\n      //value property sets the intial value for each counter\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 }\n    ],\n    isOpen: false\n  };\n  //1st lifecycle hooks\n  constructor(props) {\n    super(props);\n    console.log(\"App-Constructor\", this.props);\n  }\n\n  //2nd lifecycle hooks\n  //called after the component is rendered into the DOM\n  //this is the perfect place to make Ajax calls to get data from the server\n\n  componentDidMount() {\n    //ajax call\n    console.log(\"App-Constructor\", this.props);\n  }\n\n  handleIncrement = counter => {\n    //creating a new counters array and giving it\n    //to the set state method and have react update\n    //the state\n    //... this is the spread operator clones\n    //this.state.allcomponents\n    //with these, you will get a new array of counters\n    //the object in the new array(counters) are the same\n    //objects we have in allcomponents\n    const counters = [...this.state.allcomponents];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ allcomponents: counters });\n  };\n\n  handleReset = () => {\n    //this.state.allcomponents - this refers to the existing\n    //counters\n    //we use the map method to get each counter and reset\n    //its value to zero and then return it\n    //this give you a new array of counters\n    //You store them in counters.\n    //\n    const counters = this.state.allcomponents.map(c => {\n      c.value = 0;\n      return c;\n    });\n    //here you call this.setState with this new array\n    this.setState({ allcomponents: counters });\n  };\n\n  handleDelete = counterId => {\n    const counters = this.state.allcomponents.filter(c => c.id !== counterId);\n    this.setState({ allcomponents: counters });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const data = this.state;\n  };\n\n  handleInputChange = event => {\n    event.preventDefault();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  resetTheme = evt => {\n    evt.preventDefault();\n    this.setState({ theme: null });\n  };\n\n  chooseTheme = (theme, evt) => {\n    evt.preventDefault();\n    this.setState({ theme });\n  };\n\n  render() {\n    //render method\n    console.log(\"App-rendered\");\n    //const { search } = this.state;\n\n    return (\n      <React.Fragment>\n        <NavBar\n          totalCounters={\n            this.state.allcomponents.filter(c => c.value > 0).length\n          }\n        />\n\n        <main className=\"container\">\n          <Allcomponents\n            counters={this.state.allcomponents}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n          />\n        </main>\n        <div className=\"content\">\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"/accountant\" component={Accountant} />\n          <Route path=\"/adduser\" component={AddUser} />\n          <Route path=\"/dispatch\" component={Dispatch} />\n          <Route path=\"/drivers\" component={Drivers} />\n          <Route path=\"/formsearch\" component={FormSearch} />\n          <Route path=\"/loads\" component={Loads} />\n          <Route path=\"/navbar\" component={NavBar} />\n          <Route path=\"/users\" component={Users} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}