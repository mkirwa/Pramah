{"ast":null,"code":"var _jsxFileName = \"/Users/mahlonkirwa/Desktop/Project /aands/jipe-app/src/components/counter.jsx\";\nimport React, { Component } from 'react'; //component class has methods that will be inherited in counter class\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag2']\n    };\n  }\n\n  render() {\n    //includes any data that this component needs \n    //it could have an address, a street property or anything this component needs \n    //const classes includes all the data that we will pass in span\n    //start with primary classes that we want to have in all cases\n    //this render method is about determing the class for this label\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, tag))));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  } //adding methods\n\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/mahlonkirwa/Desktop/Project /aands/jipe-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","render","getBadgeClasses","formatCount","map","tag","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAC,CADF;AACKC,MAAAA,IAAI,EAAC,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf;AADV,KADoB;AAAA;;AAK5BC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAI,KAAKC,eAAL,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,KAAKC,WAAL,EAA5C,CADJ,EAEI;AAAQ,MAAA,SAAS,EAAG,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWE,IAAX,CAAgBI,GAAhB,CAAoBC,GAAG,IAAI;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAA3B,CADL,CAHJ,CADJ;AASH;;AACDH,EAAAA,eAAe,GAAG;AACd,QAAII,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKR,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;AACA,WAAOO,OAAP;AACH,GA1B2B,CA4B5B;;;AACAH,EAAAA,WAAW,GAAE;AAAA,UACFJ,KADE,GACO,KAAKD,KADZ,CACFC,KADE;AAET,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAqBA,KAA5B;AACH;;AAhC2B;;AAmChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\n//component class has methods that will be inherited in counter class\nclass Counter extends Component {\n    state = {\n        count:0, tags:['tag1','tag2','tag2']\n    };\n    \n    render() { \n        //includes any data that this component needs \n        //it could have an address, a street property or anything this component needs \n        //const classes includes all the data that we will pass in span\n        //start with primary classes that we want to have in all cases\n        //this render method is about determing the class for this label\n        \n        return(\n            <div>\n                <span className = {this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button className = \"btn btn-secondary btn-sm\" >Increment</button>\n                <ul>\n                    {this.state.tags.map(tag => <li key={tag}>{tag}</li>)}\n                </ul>\n            </div>\n            );\n    }\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    //adding methods\n    formatCount(){\n        const {count} = this.state;\n        return count === 0 ? \"Zero\":count;\n    }\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}